{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Media","fieldNames":["id"]},{"typeName":"Music","fieldNames":["id"]},{"typeName":"Album","fieldNames":["id","title"]},{"typeName":"Book","fieldNames":["id","title"]},{"typeName":"Query","fieldNames":["album","book"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:7902/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:7902/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"interface Media @key(fields: \"id\") {\n  id: ID!\n}\n\ninterface Music @key(fields: \"id\") {\n  id: ID!\n}\n\ntype Album implements Music @key(fields: \"id\") {\n  id: ID!\n  title: String!\n}\n\ntype Book implements Media @key(fields: \"id\") {\n  id: ID!\n  title: String!\n}\n\ntype Query {\n  album(id: ID!): Album!\n  book(id: ID!): Book!\n}\n\nextend schema\n  @link(url: \"https://specs.apollo.dev/federation/v2.10\", import: [\"@key\"])\n"},"upstreamSchema":{"key":"289c0b991a7745543fc008d13deed27a34378b92"}},"requestTimeoutSeconds":"10","id":"0","keys":[{"typeName":"Media","selectionSet":"id"},{"typeName":"Music","selectionSet":"id"},{"typeName":"Album","selectionSet":"id"},{"typeName":"Book","selectionSet":"id"}],"entityInterfaces":[{"interfaceTypeName":"Media","concreteTypeNames":["Book"]},{"interfaceTypeName":"Music","concreteTypeNames":["Album"]}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Music","fieldNames":["id","producer"]},{"typeName":"Media","fieldNames":["id","publisher"]},{"typeName":"Publisher","fieldNames":["id","name"]},{"typeName":"Query","fieldNames":["producers","publishers","publishedMedia","producedMusic"]},{"typeName":"Book","fieldNames":["id","publisher"]},{"typeName":"Album","fieldNames":["id","producer"]}],"childNodes":[{"typeName":"Producer","fieldNames":["name"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:7905/query"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:7905/query"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Music @key(fields: \"id\") @interfaceObject {\n  id: ID!\n  producer: Producer\n}\n\ntype Media @key(fields: \"id\") @interfaceObject {\n  id: ID!\n  publisher: Publisher!\n}\n\ntype Publisher @key(fields: \"id\") {\n  id: ID!\n  name: String!\n}\n\ntype Producer {\n  name: String!\n}\n\ntype Query {\n  producers: [Producer!]!\n  publishers: [Publisher!]!\n  publishedMedia: [Media!]!\n  producedMusic: [Music!]!\n}\nextend schema\n  @link(\n    url: \"https://specs.apollo.dev/federation/v2.10\"\n    import: [\"@key\", \"@interfaceObject\"]\n  )\n"},"upstreamSchema":{"key":"873cdbda1a5c472907450878852b2b0a238078c3"}},"requestTimeoutSeconds":"10","id":"1","keys":[{"typeName":"Music","selectionSet":"id"},{"typeName":"Media","selectionSet":"id"},{"typeName":"Publisher","selectionSet":"id"},{"typeName":"Book","selectionSet":"id"},{"typeName":"Album","selectionSet":"id"}],"interfaceObjects":[{"interfaceTypeName":"Music","concreteTypeNames":["Album"]},{"interfaceTypeName":"Media","concreteTypeNames":["Book"]}]}],"fieldConfigurations":[{"typeName":"Query","fieldName":"album","argumentsConfiguration":[{"name":"id","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Query","fieldName":"book","argumentsConfiguration":[{"name":"id","sourceType":"FIELD_ARGUMENT"}]}],"graphqlSchema":"schema {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nscalar openfed__Scope\n\ninterface Media {\n  id: ID!\n  publisher: Publisher!\n}\n\ninterface Music {\n  id: ID!\n  producer: Producer\n}\n\ntype Query {\n  album(id: ID!): Album!\n  book(id: ID!): Book!\n  producers: [Producer!]!\n  publishers: [Publisher!]!\n  publishedMedia: [Media!]!\n  producedMusic: [Music!]!\n}\n\ntype Publisher {\n  id: ID!\n  name: String!\n}\n\ntype Producer {\n  name: String!\n}\n\ntype Album implements Music {\n  id: ID!\n  title: String!\n  producer: Producer\n}\n\ntype Book implements Media {\n  id: ID!\n  title: String!\n  publisher: Publisher!\n}","stringStorage":{"289c0b991a7745543fc008d13deed27a34378b92":"schema {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Album implements Music @key(fields: \"id\") {\n  id: ID!\n  title: String!\n}\n\ntype Book implements Media @key(fields: \"id\") {\n  id: ID!\n  title: String!\n}\n\ninterface Media @key(fields: \"id\") {\n  id: ID!\n}\n\ninterface Music @key(fields: \"id\") {\n  id: ID!\n}\n\ntype Query {\n  album(id: ID!): Album!\n  book(id: ID!): Book!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","873cdbda1a5c472907450878852b2b0a238078c3":"schema {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Media @key(fields: \"id\") @interfaceObject {\n  id: ID!\n  publisher: Publisher!\n}\n\ntype Music @key(fields: \"id\") @interfaceObject {\n  id: ID!\n  producer: Producer\n}\n\ntype Producer {\n  name: String!\n}\n\ntype Publisher @key(fields: \"id\") {\n  id: ID!\n  name: String!\n}\n\ntype Query {\n  producedMusic: [Music!]!\n  producers: [Producer!]!\n  publishedMedia: [Media!]!\n  publishers: [Publisher!]!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope"}},"version":"2d60ae4e-8b1e-4f02-9971-dd1c108766d0","subgraphs":[{"id":"0","name":"media","routingUrl":"http://localhost:7902/graphql"},{"id":"1","name":"producers","routingUrl":"http://localhost:7905/query"}],"compatibilityVersion":"1:0.38.1"}